# Increase hash sizes to prevent warnings
proxy_headers_hash_max_size 2048;
proxy_headers_hash_bucket_size 256;

# Common proxy settings
proxy_http_version 1.1;
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Forwarded-Host $host;
proxy_set_header X-Forwarded-Server $host;

# Timeouts
proxy_connect_timeout 300s;
proxy_send_timeout 300s;
proxy_read_timeout 300s;

# Buffer settings
proxy_buffer_size 128k;
proxy_buffers 4 256k;
proxy_busy_buffers_size 256k;

# Define a more detailed log format to help with debugging
log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  'host="$host" upstream="$upstream_addr"';

# Health check endpoint
server {
    listen 80;
    server_name health.localhost;
    access_log /var/log/nginx/access.log custom;
    
    location / {
        root /usr/share/nginx/html;
        index healthcheck.html;
        try_files $uri $uri/ /healthcheck.html;
    }
}

# A default server that catches any requests that don't match a defined server_name
server {
    listen 80 default_server;
    server_name _;
    access_log /var/log/nginx/access.log custom;
    
    # Redirect to health dashboard
    location / {
        return 302 http://health.localhost;
    }
}

# --- Application Routing ---

# OpenWebUI
server {
    listen 80;
    server_name openwebui.localhost;
    access_log /var/log/nginx/openwebui.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://openwebui:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# PgAdmin
server {
    listen 80;
    server_name pgadmin.localhost;
    access_log /var/log/nginx/pgadmin.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://pgadmin:80;
    }
}


# Redis Commander
server {
    listen 80;
    server_name redis-commander.localhost;
    access_log /var/log/nginx/redis-commander.access.log custom;

    resolver 127.0.0.1;

    location / {
        proxy_pass http://redis-commander:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Mongo Express
server {
    listen 80;
    server_name mongo.localhost;
    access_log /var/log/nginx/mongo-express.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://mongo-express:8081;
    }
}

# Neo4j Browser
server {
    listen 80;
    server_name neo4j.localhost;
    access_log /var/log/nginx/neo4j.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://neo4j:7474;
    }
}

# MinIO Console
server {
    listen 80;
    server_name minio.localhost;
    access_log /var/log/nginx/minio.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://minio:9001;
        proxy_set_header Host $http_host;
    }
}

# n8n
server {
    listen 80;
    server_name n8n.localhost;
    access_log /var/log/nginx/n8n.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://n8n:5678;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }
}

# Codium
server {
    listen 80;
    server_name codium.localhost;
    access_log /var/log/nginx/codium.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://codium:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}

# Supabase Studio
server {
    listen 80;
    server_name supabase.localhost;
    access_log /var/log/nginx/supabase.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://supabase-studio:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# Elasticsearch
server {
    listen 80;
    server_name elasticsearch.localhost;
    access_log /var/log/nginx/elasticsearch.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://elasticsearch:9200;
        proxy_http_version 1.1;
        proxy_set_header Connection "Keep-Alive";
        proxy_set_header Proxy-Connection "Keep-Alive";
    }
}

# Weaviate
server {
    listen 80;
    server_name weaviate.localhost;
    access_log /var/log/nginx/weaviate.access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://weaviate:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# --- Services requiring more specific proxy headers ---

server {
    listen 80;
    server_name nextcloud.localhost;
    access_log /var/log/nginx/access.log custom;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Robots-Tag "none" always;
    add_header X-Frame-Options "SAMEORIGIN" always;

    resolver 127.0.0.1;
    location / {
        proxy_pass http://nextcloud:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
    }
}

server {
    listen 80;
    server_name gitea.localhost;
    access_log /var/log/nginx/access.log custom;
    resolver 127.0.0.1;
    location / {
        proxy_pass http://gitea:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
    }
}

server {
    listen 80;
    server_name penpot.localhost;
    access_log /var/log/nginx/penpot.access.log custom;
    
    client_max_body_size 100M;
    proxy_read_timeout 300s;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;

    resolver 127.0.0.1;
    location / {
        proxy_pass http://penpot-frontend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
    }
}